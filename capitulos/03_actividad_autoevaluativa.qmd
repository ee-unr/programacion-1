---
title: "Actividad de autoevaluación 3"
number-sections: false
---

```{=latex}
\thispagestyle{primerapagina}
```

::: {.info data-latex=""}
Esta autoevaluación DEBE ser completada sin usar R para poder razonar las preguntas.
:::

## Pregunta 1

¿Qué problema/s tiene la siguiente definición de una función en R?

```{r, eval=FALSE}
f0 <- function(a b) {
  x <- a + b
  x * 100
}
```

`r webexercises::mcq(c("Falta una sentencia de tipo return()", answer = "Falta una coma", "Las dos anteriores", "Ningún problema"))`


## Pregunta 2

Considerar la siguiente función: 

```{r, eval=FALSE}
f1 <- function(x, y) {
  if(y == "operar") {
    x <- x * 2
    rtdo <- x + 100
  } else {
    rtdo <- x
  }
  return(rtdo)
}
```

¿Qué valor se obtiene si se evalúa `f1(2, "operar")`? `r webexercises::mcq(c(2, 4, 102, answer = 104))`

¿Qué valor se obtiene si se evalúa `f1(2, "no operar")`? `r webexercises::mcq(c(answer = 2, 4, 102, 104))`

¿Qué valor se obtiene si se evalúa `f1("operar", 2)`? `r webexercises::mcq(c(2, 4, 102, 104, "Tira error", answer = "Devuelve una cadena de texto"))`

¿Qué valor se obtiene si se evalúa `f1(2)`? `r webexercises::mcq(c(2, 4, 102, 104, answer = "Tira error", "Devuelve una cadena de texto"))`

¿Qué valor se obtiene si se evalúa `f1("2", "operar")`? `r webexercises::mcq(c(2, 4, 102, 104, answer = "Tira error", "Devuelve una cadena de texto"))`

¿Qué valor se obtiene si se evalúa `f1("2", "jaja")`? `r webexercises::mcq(c(2, 4, 102, 104, "Tira error", answer = "Devuelve una cadena de texto"))`


## Pregunta 3

Considerando la función `f1` anterior junto con la función `f2` y el programa que se muestran a continuación, indicar si cada una de las siguientes afirmaciones es VERDADERA o FALSA o elegir la respuesta correcta:

```{r, eval=FALSE}
# Definición de funciones
f1 <- function(x, y) {
  if(y == "operar") {
    x <- x * 2
    rtdo <- x + 100
  } else {
    rtdo <- x
  }
  return(rtdo)
}

f2 <- function(z) {
  return(z + b)
}

# Programa
x <- 10
palabra <- "operar"
a <- f1(x, palabra)
cat("Mensaje 1: el valor encontrado es ", a, "y la variable x vale ", x, "\n")
b <- 12
c <- f2(15)
cat("Mensaje 2: el valor encontrado es ", c, "\n")
d <- f1(5, "no operar") + f1(5, "operar")
cat("Mensaje 3: el valor encontrado es", d, "\n")
```

La variable `d` es local a `f1`: `r webexercises::mcq(c("Verdadero", answer = "Falso"))`

La variable `c` es global: `r webexercises::mcq(c(answer = "Verdadero", "Falso"))`

La función `f2` respeta el principio de transparencia referencial: `r webexercises::mcq(c("Verdadero", answer = "Falso"))`

La función `f2` puede devolver distintos resultados aunque le pasemos siempre el mismo valor para el parámetro formal `z`: `r webexercises::mcq(c(answer = "Verdadero", "Falso"))`

La variable `rtdo` existe en el ambiente global del programa: `r webexercises::mcq(c("Verdadero", answer = "Falso"))`

La variable `rtdo` es local a la función `f1`: `r webexercises::mcq(c(answer = "Verdadero", "Falso"))`

El texto mostrado por el primer mensaje será: 
`r webexercises::mcq(c("Mensaje 1: el valor encontrado es 10 y la variable x vale 10", "Mensaje 1: el valor encontrado es 10 y la variable x vale 120", answer = "Mensaje 1: el valor encontrado es 120 y la variable x vale 10", "Mensaje 1: el valor encontrado es 120 y la variable x vale 20"))`

El texto mostrado por el segundo mensaje será: 
`r webexercises::mcq(c("Mensaje 2: el valor encontrado es 12", "Mensaje 2: el valor encontrado es 15", answer = "Mensaje 2: el valor encontrado es 27", "No se muestra un mensaje porque se produce error"))`

El texto mostrado por el tercer mensaje será: 
`r webexercises::mcq(c("Mensaje 3: el valor encontrado es 5", "Mensaje 3: el valor encontrado es 110", answer = "Mensaje 3: el valor encontrado es 115", "No se muestra un mensaje porque se produce error"))`


## Pregunta 4

Seleccionar la opción correcta:

`warning()` `r webexercises::mcq(c("Muestra un mensaje que detiene inmediatamente la ejecución de la función.", answer = "Muestra un mensaje que no detiene la ejecución del programa pero advierte al usuario de un posible error.", "Muestra un mensaje en la consola sin que sea considerado un error o advertencia."))`

`message()` `r webexercises::mcq(c("Muestra un mensaje que detiene inmediatamente la ejecución de la función.", "Muestra un mensaje que no detiene la ejecución del programa pero advierte al usuario de un posible error.", answer = "Muestra un mensaje en la consola sin que sea considerado un error o advertencia."))`

`stop()` `r webexercises::mcq(c(answer = "Muestra un mensaje que detiene inmediatamente la ejecución de la función.", "Muestra un mensaje que no detiene la ejecución del programa pero advierte al usuario de un posible error.", "Muestra un mensaje en la consola sin que sea considerado un error o advertencia."))`

`NULL`, `NA` y `NaN` son tres objetos que tienen comportamientos semejantes en las operaciones. `r webexercises::mcq(c("Verdadero", answer = "Falso"))`
